#!/bin/bash

function usage()
{
cat << EOF

  Install packages and Swift on Ubuntu

  Syntax:
    install  --ubuntu=<Ubuntu version>
             --package=<ubuntu package to install> 
             [--clean=<clean packages. Default true>] 
             [--swift=<Swift version>]
             [--branch=<branch date>]        
             [--snapshot=<snapshot date>]        

  Values for snapshot and branch:
      - a date like '2017-01-15', 
      - a word like 'today' or 'yesterday'

EOF
exit 255
}

if [ "$#" -eq 0 ] 
then
  usage
else
  CLEAN=true
  for PARAM in "$@"
  do
    case $PARAM in
        -u=*|--ubuntu=*)
          UBUNTU="${PARAM#*=}"
          shift
          ;;
        -p=*|--package=*)
          PACKAGES="$PACKAGES ${PARAM#*=}"
          shift
          ;;
        -c=*|--clean=*)
          CLEAN="${PARAM#*=}"
          shift
          ;;
        -s=*|--swift=*)
          SWIFT="${PARAM#*=}"
          shift
          ;;
        -b=*|--branch=*)
          BRANCH="${PARAM#*=}"
          shift
          ;;
        -sn=*|--snapshot=*)
          SNAPSHOT="${PARAM#*=}"
          shift
          ;;
        *)
          usage
        ;;
    esac
  done
fi

# Check branch date
if [ ! -z "$BRANCH" ] 
then
  case $BRANCH in
    today)
      SBRANCH=$(date +%Y-%m-%d)
      ;;
    yesterday)
      SBRANCH=$(date +%Y-%m-%d -d "1 day ago")
      ;;
  esac
fi

# Check snapshot date
if [ ! -z "$SNAPSHOT" ] 
then
  case $SNAPSHOT in
    today)
      SNAPSHOT=$(date +%Y-%m-%d)
      ;;
    yesterday)
      SNAPSHOT=$(date +%Y-%m-%d -d "1 day ago")
      ;;
  esac
fi

# Define sudo if not root
if [[ $EUID -ne 0 ]]
then
 SUDO=sudo
fi

# Ubuntu packages
if [ ! -z "$PACKAGES" ]
then
  $SUDO apt-get update 
  $SUDO apt-get upgrade -y
  $SUDO apt-get install -y --no-install-recommends $PACKAGES
  if [ "$CLEAN" == "true" ]
  then
    $SUDO apt-get clean
    $SUDO rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
  fi
fi

#Install Swift
if [ ! -z "$SWIFT" -o ! -z "$BRANCH" -o ! -z "$SNAPSHOT" ] 
then
  if [ ! -z "$SWIFT" ]
  then
    export SWIFT_ARCHIVE_NAME=swift-${SWIFT}-RELEASE-ubuntu${UBUNTU}
    export SWIFT_URL=https://swift.org/builds/swift-${SWIFT}-release/ubuntu${UBUNTU//.}/swift-${SWIFT}-RELEASE/${SWIFT_ARCHIVE_NAME}.tar.gz
  fi

  if [ ! -z "$BRANCH" ] 
  then
    export SWIFT_ARCHIVE_NAME=swift-${SWIFT}-DEVELOPMENT-SNAPSHOT-${BRANCH}-a-ubuntu${UBUNTU}
    export SWIFT_URL=https://swift.org/builds/swift-${SWIFT}-branch/ubuntu${UBUNTU//.}/swift-${SWIFT}-DEVELOPMENT-SNAPSHOT-${BRANCH}-a/${SWIFT_ARCHIVE_NAME}.tar.gz
  fi

  if [ ! -z "$SNAPSHOT" ] 
  then
    export SWIFT_ARCHIVE_NAME=swift-DEVELOPMENT-SNAPSHOT-${SNAPSHOT}-a-ubuntu${UBUNTU}
    export SWIFT_URL=https://swift.org/builds/development/ubuntu${UBUNTU//.}/swift-DEVELOPMENT-SNAPSHOT-${SNAPSHOT}-a/${SWIFT_ARCHIVE_NAME}.tar.gz
  fi

  if [ ! -z "$SWIFT_URL" ]
  then
    cd /tmp
    mkdir swift.org
    cd swift.org
    echo "Download: ${SWIFT_URL}"
    curl -OL ${SWIFT_URL}
    curl -OL ${SWIFT_URL}.sig
    $SUDO tar -xvzf ${SWIFT_ARCHIVE_NAME}.tar.gz --directory / --strip-components=1
    rm -rf /tmp/swift.org
  fi
fi
